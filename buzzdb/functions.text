resize_function(){
  printf ("\n");
  printf ("start resize function\n");
  *len = *len * 2;
  hash_table = realloc (hash_table, sizeof (person *) * *len);
  person tmp_table[*len];
  memset (tmp_table, 0, *len * sizeof (person));
  int x = 0;
  for (int i = 0; i < *len; i++)
    {
      if (hash_table[i] == NULL)
	{
	  printf ("--//--\n");
	  continue;
	}
      else
	{
	  person *tmp = hash_table[i];
	  while (tmp != NULL)
	    {
	      printf ("%s -", tmp->id);
	      tmp_table[x] = *tmp;
	      tmp = tmp->next;
	      x++;
	    }
	  hash_table[i] = NULL;
	  printf ("\n");
	}
    }

  for (int i = 0; i < *len; i++)
    {

      int index = get_index (tmp_table[i].id, len);
      tmp_table[i].next = hash_table[index];
      hash_table[index] = &tmp_table[i];

    }

  printf ("end resize function\n");
  printf ("printing table\n");
  for (int i = 0; i < *len; i++)
    {
      if (hash_table[i] == NULL)
	{
	  printf ("--//--\n");
	}
      else
	{
	  person *tmp = hash_table[i];
	  while (tmp != NULL)
	    {
	      printf ("%s -", tmp->id);
	      tmp = tmp->next;
	    }
	  printf ("\n");
	}
    }
  printf ("end of table\n");
  return;
  }
